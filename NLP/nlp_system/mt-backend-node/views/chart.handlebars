<div style="height: auto; padding: 30px">
  <div style="">
      <canvas id="mountNode"></canvas></div>
      <canvas id="mountNode1"></canvas>
      <canvas id="mountNode2"></canvas>
      <canvas id="mountNode3"></canvas>
</div>


<script>

var map = {
    '热词1': '40%',
    '热词2': '20%',
    '热词3': '18%',
    '热词4': '15%',
    '热词5': '5%',
    '热词6': '2%'
  };
  function createchart(data){
     var chart = new F2.Chart({
    id: 'mountNode',
    pixelRatio: window.devicePixelRatio
  });
  chart.source(data, {
    percent: {
      formatter: function formatter(val) {
        return val * 100 + '%';
      }
    }
  });
  chart.legend({
    position: 'right',
    itemFormatter: function itemFormatter(val) {
      return val;
    }
  });
  chart.tooltip(false);
  chart.coord('polar', {
    transposed: true,
    radius: 0.85
  });
  chart.axis(false);
  chart.interval().position('a*percent').color('name', ['#1890FF', '#13C2C2', '#2FC25B', '#FACC14', '#F04864', '#8543E0']).adjust('stack').style({
    lineWidth: 1,
    stroke: '#fff',
    lineJoin: 'round',
    lineCap: 'round'
  }).animate({
    appear: {
      duration: 1200,
      easing: 'bounceOut'
    }
  });

  chart.render();
  }
 
 

</script>

<script>
   var data = [{
    date: "2017-06-05",
    value: 116
  }, {
    date: "2017-06-06",
    value: 129
  }, {
    date: "2017-06-07",
    value: 135
  }, {
    date: "2017-06-08",
    value: 86
  }, {
    date: "2017-06-09",
    value: 73
  }, {
    date: "2017-06-10",
    value: 85
  }, {
    date: "2017-06-11",
    value: 73
  }, {
    date: "2017-06-12",
    value: 68
  }, {
    date: "2017-06-13",
    value: 92
  }, {
    date: "2017-06-14",
    value: 130
  }, {
    date: "2017-06-15",
    value: 245
  }, {
    date: "2017-06-16",
    value: 139
  }, {
    date: "2017-06-17",
    value: 115
  }, {
    date: "2017-06-18",
    value: 111
  }, {
    date: "2017-06-19",
    value: 309
  }, {
    date: "2017-06-20",
    value: 206
  }, {
    date: "2017-06-21",
    value: 137
  }, {
    date: "2017-06-22",
    value: 128
  }, {
    date: "2017-06-23",
    value: 85
  }, {
    date: "2017-06-24",
    value: 94
  }, {
    date: "2017-06-25",
    value: 71
  }, {
    date: "2017-06-26",
    value: 106
  }, {
    date: "2017-06-27",
    value: 84
  }, {
    date: "2017-06-28",
    value: 93
  }, {
    date: "2017-06-29",
    value: 85
  }, {
    date: "2017-06-30",
    value: 73
  }, {
    date: "2017-07-01",
    value: 83
  }, {
    date: "2017-07-02",
    value: 125
  }, {
    date: "2017-07-03",
    value: 107
  }, {
    date: "2017-07-04",
    value: 82
  }, {
    date: "2017-07-05",
    value: 44
  }, {
    date: "2017-07-06",
    value: 72
  }, {
    date: "2017-07-07",
    value: 106
  }, {
    date: "2017-07-08",
    value: 107
  }, {
    date: "2017-07-09",
    value: 66
  }, {
    date: "2017-07-10",
    value: 91
  }, {
    date: "2017-07-11",
    value: 92
  }, {
    date: "2017-07-12",
    value: 113
  }, {
    date: "2017-07-13",
    value: 107
  }, {
    date: "2017-07-14",
    value: 131
  }, {
    date: "2017-07-15",
    value: 111
  }, {
    date: "2017-07-16",
    value: 64
  }, {
    date: "2017-07-17",
    value: 69
  }, {
    date: "2017-07-18",
    value: 88
  }, {
    date: "2017-07-19",
    value: 77
  }, {
    date: "2017-07-20",
    value: 83
  }, {
    date: "2017-07-21",
    value: 111
  }, {
    date: "2017-07-22",
    value: 57
  }, {
    date: "2017-07-23",
    value: 55
  }, {
    date: "2017-07-24",
    value: 60
  }];
  var chart = new F2.Chart({
    id: 'mountNode1',
    pixelRatio: window.devicePixelRatio
  });

  chart.source(data, {
    value: {
      tickCount: 5,
      min: 0
    },
    date: {
      type: 'timeCat',
      range: [0, 1],
      tickCount: 3
    }
  });
  chart.tooltip({
    custom: true,
    showXTip: true,
    showYTip: true,
    snap: true,
    crosshairsType: 'xy',
    crosshairsStyle: {
      lineDash: [2]
    }
  });
  chart.axis('date', {
    label: function label(text, index, total) {
      var textCfg = {};
      if (index === 0) {
        textCfg.textAlign = 'left';
      } else if (index === total - 1) {
        textCfg.textAlign = 'right';
      }
      return textCfg;
    }
  });
  chart.line().position('date*value');
  chart.render();
</script>
<script>
  var data = [{
    item: 'Design',
    user: '用户 A',
    score: 70
  }, {
    item: 'Design',
    user: '用户 B',
    score: 30
  }, {
    item: 'Development',
    user: '用户 A',
    score: 60
  }, {
    item: 'Development',
    user: '用户 B',
    score: 70
  }, {
    item: 'Marketing',
    user: '用户 A',
    score: 50
  }, {
    item: 'Marketing',
    user: '用户 B',
    score: 60
  }, {
    item: 'Users',
    user: '用户 A',
    score: 40
  }, {
    item: 'Users',
    user: '用户 B',
    score: 50
  }, {
    item: 'Test',
    user: '用户 A',
    score: 60
  }, {
    item: 'Test',
    user: '用户 B',
    score: 70
  }, {
    item: 'Language',
    user: '用户 A',
    score: 70
  }, {
    item: 'Language',
    user: '用户 B',
    score: 50
  }, {
    item: 'Technology',
    user: '用户 A',
    score: 70
  }, {
    item: 'Technology',
    user: '用户 B',
    score: 40
  }, {
    item: 'Support',
    user: '用户 A',
    score: 60
  }, {
    item: 'Support',
    user: '用户 B',
    score: 40
  }];
  var chart = new F2.Chart({
    id: 'mountNode2',
    pixelRatio: window.devicePixelRatio
  });

  chart.coord('polar');
  chart.source(data, {
    score: {
      min: 0,
      max: 120,
      nice: false,
      tickCount: 4
    }
  });
  chart.tooltip({
    custom: true, // 自定义 tooltip 内容框
    onChange: function onChange(obj) {
      var legend = chart.get('legendController').legends.top[0];
      var tooltipItems = obj.items;
      var legendItems = legend.items;
      var map = {};
      legendItems.map(function(item) {
        map[item.name] = _.clone(item);
      });
      tooltipItems.map(function(item) {
        var name = item.name;
        var value = item.value;
        if (map[name]) {
          map[name].value = value;
        }
      });
      legend.setItems(_.values(map));
    },
    onHide: function onHide() {
      var legend = chart.get('legendController').legends.top[0];
      legend.setItems(chart.getLegendItems().country);
    }
  });
  chart.axis('score', {
    label: function label(text, index, total) {
      if (index === total - 1) {
        return null;
      }
      return {
        top: true
      };
    },
    grid: {
      lineDash: null,
      type: 'arc' // 弧线网格
    }
  });
  chart.axis('item', {
    grid: {
      lineDash: null
    }
  });
  chart.line().position('item*score').color('user');
  chart.point().position('item*score').color('user').style({
    stroke: '#fff',
    lineWidth: 1
  });
  chart.render();
</script>
<script>
  var data = [{
    name: 'London',
    月份: 'Jan.',
    月均降雨量: 18.9
  }, {
    name: 'London',
    月份: 'Feb.',
    月均降雨量: 28.8
  }, {
    name: 'London',
    月份: 'Mar.',
    月均降雨量: 39.3
  }, {
    name: 'London',
    月份: 'Apr.',
    月均降雨量: 81.4
  }, {
    name: 'London',
    月份: 'May.',
    月均降雨量: 47
  }, {
    name: 'London',
    月份: 'Jun.',
    月均降雨量: 20.3
  }, {
    name: 'London',
    月份: 'Jul.',
    月均降雨量: 24
  }, {
    name: 'London',
    月份: 'Aug.',
    月均降雨量: 35.6
  }, {
    name: 'Berlin',
    月份: 'Jan.',
    月均降雨量: 12.4
  }, {
    name: 'Berlin',
    月份: 'Feb.',
    月均降雨量: 23.2
  }, {
    name: 'Berlin',
    月份: 'Mar.',
    月均降雨量: 34.5
  }, {
    name: 'Berlin',
    月份: 'Apr.',
    月均降雨量: 99.7
  }, {
    name: 'Berlin',
    月份: 'May.',
    月均降雨量: 52.6
  }, {
    name: 'Berlin',
    月份: 'Jun.',
    月均降雨量: 35.5
  }, {
    name: 'Berlin',
    月份: 'Jul.',
    月均降雨量: 37.4
  }, {
    name: 'Berlin',
    月份: 'Aug.',
    月均降雨量: 42.4
  }];
  var chart = new F2.Chart({
    id: 'mountNode3',
    pixelRatio: window.devicePixelRatio
  });
  chart.source(data, {
    '月均降雨量': {
      tickCount: 5
    }
  });
  chart.tooltip({
    custom: true, // 自定义 tooltip 内容框
    onChange: function onChange(obj) {
      var legend = chart.get('legendController').legends.top[0];
      var tooltipItems = obj.items;
      var legendItems = legend.items;
      var map = {};
      legendItems.map(function(item) {
        map[item.name] = _.clone(item);
      });
      tooltipItems.map(function(item) {
        var name = item.name;
        var value = item.value;
        if (map[name]) {
          map[name].value = value;
        }
      });
      legend.setItems(_.values(map));
    },
    onHide: function onHide() {
      var legend = chart.get('legendController').legends.top[0];
      legend.setItems(chart.getLegendItems().country);
    }
  });
  chart.interval().position('月份*月均降雨量').color('name').adjust('stack');
  chart.render();
</script>